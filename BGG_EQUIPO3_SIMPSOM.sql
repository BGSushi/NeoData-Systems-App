CREATE DATABASE BGG_EQUIPO3_SIMPSON;

USE BGG_EQUIPO3_SIMPSON;

/*DDL INSTRUCCIONES DE LENGUAJE DE DESCRIPCION DE DATOS*/
CREATE TABLE BGG_VENDEDOR (
ID_VENDEDOR_PK INT NOT NULL PRIMARY KEY,
NOMBRE_VENDEDOR VARCHAR (15),
TEL_VENDEDOR VARCHAR (10)
); 

CREATE TABLE BGG_EMPLEADO (
NO_EMPLEADO_PK INT NOT NULL PRIMARY KEY,
NOM_EMPLEADO VARCHAR (15),
LEGAJO VARCHAR (15),
DIR_EMPLEADO VARCHAR (25),
TEL_EMPLEADO VARCHAR (10),
EMPRESA_EMPLEADO VARCHAR (20),
CORREO_EMPLEADO VARCHAR (30)
);

CREATE TABLE BGG_VISITA (
ID_VISITA_PK INT NOT NULL PRIMARY KEY,
FECHA_VISITA VARCHAR (10),
HORA_VISITA VARCHAR (10),
RES_VISITA VARCHAR (20),
ID_VENDEDOR_FK INT FOREIGN KEY REFERENCES BGG_VENDEDOR (ID_VENDEDOR_PK),
NO_EMPLEADO_FK INT FOREIGN KEY REFERENCES BGG_EMPLEADO (NO_EMPLEADO_PK)
);

CREATE TABLE BGG_VENTA (
ID_VENTA_PK INT NOT NULL PRIMARY KEY,
FECHA_VENTA VARCHAR (10),
HORA_VENTA VARCHAR (10),
LIBROS_VENTA INT, 
ID_VISITA_FK INT FOREIGN KEY REFERENCES BGG_VISITA (ID_VISITA_PK)
);

CREATE TABLE BGG_LIBRO (
ID_LIBRO_PK INT NOT NULL PRIMARY KEY,
TITULO_LIB VARCHAR (20),
AUTOR VARCHAR (20),
EDITORIAL_LIBRO VARCHAR (15),
GENERO_LIBRO VARCHAR (15)
);

CREATE TABLE BGG_VENTA_LIBRO (
ID_VENTA_FK INT FOREIGN KEY REFERENCES BGG_VENTA (ID_VENTA_PK),
ID_LIBRO_FK INT FOREIGN KEY REFERENCES BGG_LIBRO (ID_LIBRO_PK),
CANTIDAD INT,
METODO_DE_PAGO VARCHAR (8)
);


/* DML INSTRUCCIONES DEL LENGUAJE DE MANIPULACIÓN DE DATOS */
SELECT * FROM BGG_VENDEDOR;
SELECT * FROM BGG_EMPLEADO;
SELECT * FROM BGG_VISITA;
SELECT * FROM BGG_VENTA;
SELECT * FROM BGG_LIBRO;
SELECT * FROM BGG_VENTA_LIBRO;


/* INSTRUCCIONES DE INSERT */

INSERT INTO BGG_VENDEDOR (ID_VENDEDOR_PK, NOMBRE_VENDEDOR, TEL_VENDEDOR) VALUES
(1, 'Akira Yamato', '5511223344'),
(2, 'Liam Müller', '4988123456'),
(3, 'Fatima Elhadi', '2123344556'),
(4, 'Carlos Ayala', '5037788123'),
(5, 'Anya Petrova', '7499123456');

INSERT INTO BGG_EMPLEADO (NO_EMPLEADO_PK, NOM_EMPLEADO, LEGAJO, DIR_EMPLEADO, TEL_EMPLEADO, EMPRESA_EMPLEADO, CORREO_EMPLEADO) VALUES
(1, 'João Mendes', 'LEG1023', 'Rua das Flores 145', '5521987654', 'Editora Globo', 'joao@globo.com'),
(2, 'Aisha Khan', 'LEG2035', 'Karachi Main Rd 45', '9233344455', 'Urdu Books', 'aisha.k@urdu.pk'),
(3, 'Noah Smith', 'LEG3331', 'Elm Street 101', '1212555123', 'LibraNY Inc.', 'n.smith@librany.us'),
(4, 'Lucía Torres', 'LEG4129', 'Calle Lima 2021', '5411345678', 'Andes Press', 'lucia@andes.ar'),
(5, 'Jürgen Braun', 'LEG5011', 'Berlinerstr. 22', '4930123456', 'BücherHaus', 'jurgen@buch.de');

INSERT INTO BGG_VISITA (ID_VISITA_PK, FECHA_VISITA, HORA_VISITA, RES_VISITA, ID_VENDEDOR_FK, NO_EMPLEADO_FK) VALUES
(1, '2025-06-01', '09:00', 'Interesado', 1, 1),
(2, '2025-06-01', '10:30', 'Compra segura', 2, 2),
(3, '2025-06-02', '11:00', 'Reunión pendiente', 3, 3),
(4, '2025-06-03', '14:00', 'Compra parcial', 4, 4),
(5, '2025-06-03', '15:30', 'No interesado', 5, 5);

INSERT INTO BGG_VENTA (ID_VENTA_PK, FECHA_VENTA, HORA_VENTA, LIBROS_VENTA, ID_VISITA_FK) VALUES
(1, '2025-06-01', '09:15', 3, 1),
(2, '2025-06-01', '10:45', 5, 2),
(3, '2025-06-02', '11:15', 2, 3),
(4, '2025-06-03', '14:20', 4, 4),
(5, '2025-06-03', '15:45', 1, 5);

INSERT INTO BGG_LIBRO (ID_LIBRO_PK, TITULO_LIB, AUTOR, EDITORIAL_LIBRO, GENERO_LIBRO) VALUES
(1, 'Shantaram', 'G. D. Roberts', 'Abacus', 'Ficción'),
(2, 'Pachinko', 'Min Jin Lee', 'Grand Central', 'Drama'),
(3, 'Midnight Library', 'Matt Haig', 'Canongate', 'Ficción'),
(4, 'The Kite Runner', 'K. Hosseini', 'Riverhead', 'Drama'),
(5, 'Life of Pi', 'Yann Martel', 'Knopf', 'Aventura');

INSERT INTO BGG_VENTA_LIBRO (ID_VENTA_FK, ID_LIBRO_FK, CANTIDAD, METODO_DE_PAGO) VALUES
(1, 1, 1, 'Tarjeta'),
(2, 2, 2, 'Efectivo'),
(3, 3, 1, 'Cheque'),
(4, 4, 3, 'Transfer'),
(5, 5, 1, 'Efectivo');


SELECT * FROM BGG_VENDEDOR;
SELECT * FROM BGG_EMPLEADO;
SELECT * FROM BGG_VISITA;
SELECT * FROM BGG_VENTA;
SELECT * FROM BGG_LIBRO;
SELECT * FROM BGG_VENTA_LIBRO;

/* Agregando la edad al empleado */
ALTER TABLE BGG_EMPLEADO
ADD EDAD INT;


/* VISTAS*/
/* Crear la vista VW_RESUMEN_VISITAS */
CREATE VIEW VW_RESUMEN_VISITAS AS
SELECT 
    V.NOMBRE_VENDEDOR,
    E.NOM_EMPLEADO,
    VI.FECHA_VISITA
FROM BGG_VISITA VI
JOIN BGG_VENDEDOR V ON VI.ID_VENDEDOR_FK = V.ID_VENDEDOR_PK
JOIN BGG_EMPLEADO E ON VI.NO_EMPLEADO_FK = E.NO_EMPLEADO_PK;

SELECT * FROM VW_RESUMEN_VISITAS;


/* Crear la vista VW_DETALLE_VENTAS_LIBROS */
CREATE VIEW VW_DETALLE_VENTAS_LIBROS AS
SELECT 
    L.TITULO_LIB,
    L.AUTOR,
    VL.CANTIDAD,
    VL.METODO_DE_PAGO
FROM BGG_VENTA_LIBRO VL
JOIN BGG_LIBRO L ON VL.ID_LIBRO_FK = L.ID_LIBRO_PK;

SELECT * FROM VW_DETALLE_VENTAS_LIBROS;


/* Crear la vista VW_HISTORIAL_COMPLETO */
CREATE VIEW VW_HISTORIAL_COMPLETO AS
SELECT 
    V.NOMBRE_VENDEDOR,
    E.NOM_EMPLEADO,
    L.TITULO_LIB,
    VE.FECHA_VENTA,
    VL.CANTIDAD,
    VL.METODO_DE_PAGO
FROM BGG_VENTA VE
JOIN BGG_VISITA VI ON VE.ID_VISITA_FK = VI.ID_VISITA_PK
JOIN BGG_VENDEDOR V ON VI.ID_VENDEDOR_FK = V.ID_VENDEDOR_PK
JOIN BGG_EMPLEADO E ON VI.NO_EMPLEADO_FK = E.NO_EMPLEADO_PK
JOIN BGG_VENTA_LIBRO VL ON VE.ID_VENTA_PK = VL.ID_VENTA_FK
JOIN BGG_LIBRO L ON VL.ID_LIBRO_FK = L.ID_LIBRO_PK;

SELECT * FROM VW_HISTORIAL_COMPLETO;

/* . Vista: VW_INFORME_VISITAS */
CREATE VIEW VW_INFORME_VISITAS AS
SELECT 
    V.ID_VENDEDOR_PK,
    V.NOMBRE_VENDEDOR,
    E.NO_EMPLEADO_PK,
    E.NOM_EMPLEADO,
    VI.ID_VISITA_PK,
    VI.FECHA_VISITA,
    VI.HORA_VISITA,
    VI.RES_VISITA
FROM BGG_VISITA VI
JOIN BGG_VENDEDOR V ON VI.ID_VENDEDOR_FK = V.ID_VENDEDOR_PK
JOIN BGG_EMPLEADO E ON VI.NO_EMPLEADO_FK = E.NO_EMPLEADO_PK;

SELECT * FROM VW_INFORME_VISITAS;

/* Vista: VW_RESUMEN_VENTAS */
CREATE VIEW VW_RESUMEN_VENTAS AS
SELECT 
    VE.ID_VENTA_PK,
    VE.FECHA_VENTA,
    VE.HORA_VENTA,
    VE.LIBROS_VENTA,
    VI.ID_VISITA_PK,
    V.NOMBRE_VENDEDOR,
    E.NOM_EMPLEADO
FROM BGG_VENTA VE
JOIN BGG_VISITA VI ON VE.ID_VISITA_FK = VI.ID_VISITA_PK
JOIN BGG_VENDEDOR V ON VI.ID_VENDEDOR_FK = V.ID_VENDEDOR_PK
JOIN BGG_EMPLEADO E ON VI.NO_EMPLEADO_FK = E.NO_EMPLEADO_PK;

SELECT * FROM VW_RESUMEN_VENTAS;

/* Vista: VW_DETALLE_VENTAS_LIBROS */
CREATE VIEW VW_DETALLE_VENTAS_LIBRO AS
SELECT 
    VE.ID_VENTA_PK,
    VE.FECHA_VENTA,
    V.NOMBRE_VENDEDOR,
    E.NOM_EMPLEADO,
    L.TITULO_LIB,
    VL.CANTIDAD,
    VL.METODO_DE_PAGO
FROM BGG_VENTA VE
JOIN BGG_VISITA VI ON VE.ID_VISITA_FK = VI.ID_VISITA_PK
JOIN BGG_VENDEDOR V ON VI.ID_VENDEDOR_FK = V.ID_VENDEDOR_PK
JOIN BGG_EMPLEADO E ON VI.NO_EMPLEADO_FK = E.NO_EMPLEADO_PK
JOIN BGG_VENTA_LIBRO VL ON VE.ID_VENTA_PK = VL.ID_VENTA_FK
JOIN BGG_LIBRO L ON VL.ID_LIBRO_FK = L.ID_LIBRO_PK;

SELECT * FROM VW_DETALLE_VENTAS_LIBRO;


/* Índice para mejorar búsqueda por título de libro */
-- Crear índice para acelerar búsquedas por título
CREATE INDEX IX_LIBRO_TITULO
ON BGG_LIBRO(TITULO_LIB);

-- Verificar su creación
SELECT name, type_desc
FROM sys.indexes
WHERE object_id = OBJECT_ID('BGG_LIBRO');


-- UPDATE
 UPDATE BGG_EMPLEADO
 SET EDAD=23
 WHERE NO_EMPLEADO_PK=1;
  UPDATE BGG_EMPLEADO
 SET EDAD=33
 WHERE NO_EMPLEADO_PK=2;
  UPDATE BGG_EMPLEADO
 SET EDAD=40
 WHERE NO_EMPLEADO_PK=3;
  UPDATE BGG_EMPLEADO
 SET EDAD=50
 WHERE NO_EMPLEADO_PK=4;
  UPDATE BGG_EMPLEADO
 SET EDAD=45
 WHERE NO_EMPLEADO_PK=5;
 SELECT * FROM BGG_EMPLEADO;

 -- DELATE
 -- Borra libros cuyo género sea 'Terror'
DELETE FROM BGG_LIBRO
WHERE GENERO_LIBRO = 'Terror';

-- Verifica los libros restantes
SELECT * FROM BGG_LIBRO;

-- SELECT (Con funciones)
-- Consulta: sumar la cantidad de libros por método de pago
SELECT METODO_DE_PAGO,
       SUM(CANTIDAD) AS TOTAL_LIBROS
FROM BGG_VENTA_LIBRO
GROUP BY METODO_DE_PAGO;



-- Paso 1: crear un login a nivel de servidor (si no existe)
CREATE LOGIN Gerardo WITH PASSWORD = '1234';

-- Paso 2: crear el usuario en la base de datos
CREATE USER Gerardo FOR LOGIN Gerardo;

-- Permite que el usuario Gerardo agregue, modifique y elimine datos en la tabla BGG_VENTA
GRANT INSERT, UPDATE, DELETE ON BGG_VENTA TO GERARDO;

REVOKE INSERT, UPDATE, DELETE ON BGG_VENTA FROM Gerardo;


DENY SELECT ON BGG_LIBRO TO Gerardo;


/*Select con funciones: nombre del empleado, edad, promedio de edad*/
SELECT 
    NOM_EMPLEADO AS Nombre_Empleado,
    EDAD AS Edad,
    AVG(EDAD) OVER() AS Promedio_Edad
FROM BGG_EMPLEADO;
